1、什么是Http协议：
    对客户端和服务端之间传输的格式规范，简称超文本传输协议, 
    HTTP（超文本传输协议）是一个基于请求与响应模式的、无状态的、应用层的协议，常基于TCP的连接方式
2、历史：
    http/0.9：只有GET命令，服务器只能回应html格式的字符串，服务器发送完成后关闭连接。
    http/1.0: 不仅可以传输文字，还能传输图像、视频、二进制文件，除了GET命令，还引入了POST命令和HEAD命令，通信都必须包括头信息（HTTP header）
    0.9 - 1.0:每个TCP连接只能发送一个请求,发送数据完毕，连接就关闭，
    http/1.1: 引入了持久连接（persistent connection），即TCP连接默认不关闭，可以被多个请求复用,目前，对于同一个域名，大多数浏览器允许同时建立6个持久连接。
              引入了管道机制（pipelining），即在同一个TCP连接里面，客户端可以同时发送多个请求,同步处理。
    http/2:多个请求之间不用等待一个完成，（二进制、多工、数据流、头信息压缩、服务器推送）
        数据流：HTTP/2 将每个请求或回应的所有数据包，称为一个数据流（stream），每个数据流都有一个独一无二的编号
        服务端推送：允许服务器未经请求，主动向客户端发送资源
    1.1版本头信息肯定是文本，数据可以是文本也可以是二进制，2版本头和数据都是二进制，统称为帧，头数据帧和数据帧

    总结：HTTP/0.9 客户端只能发送get请求，服务端只能响应HTML文件
         HTTP/1.0 多了POST和HEAD请求，头信息多了Content-type、Content-Encoding等有用的字段，明显的缺点是一次TCP连接只能发送一次请求
         HTTP/1.1 持久连接、管道机制、 Content-Length字段、分块传输编码（Transfer-Encoding: chunked）、HOST字段、多个请求方法，明显的缺点是“队头阻塞
         HTTP/2 二进制协议、多工通信、数据流、头信息压缩、服务器推送
3、格式：
    请求报文包含三部分：
    a、请求行：包含请求方法、URI、HTTP版本信息
    b、请求首部字段
    c、请求内容实体
    响应报文包含三部分：
    a、状态行：包含HTTP版本、状态码、状态码的原因短语
    b、响应首部字段
    c、响应内容实体

    200 OK      //客户端请求成功
    400 Bad Request  //客户端请求有语法错误，不能被服务器所理解
    401 Unauthorized //请求未经授权，这个状态代码必须和WWW-Authenticate报头域一起使用 
    403 Forbidden  //服务器收到请求，但是拒绝提供服务
    404 Not Found  //请求资源不存在，eg：输入了错误的URL
    500 Internal Server Error //服务器发生不可预期的错误
    503 Server Unavailable  //服务器当前不能处理客户端的请求，一段时间后可能恢复正常

4、无连接、无状态、媒体独立：
    第一，无连接，指的是每次链接只处理一个请求。
    第二，无状态，http它本身就是一个无状态协议，对于后续需要前面的相关信息就会需要重新传送。

5、Http协议首部字段

a、通用首部字段（请求报文与响应报文都会使用的首部字段）

    Date：创建报文时间
    Connection：连接的管理
    Cache-Control：缓存的控制
    Transfer-Encoding：报文主体的传输编码方式  （chunked  分块编码传输）

b、请求首部字段（请求报文会使用的首部字段）

    Host：请求资源所在服务器
    Accept：可处理的媒体类型 text/html 
    Accept-Charset：可接收的字符集
    Accept-Encoding：可接受的内容编码(压缩机制)
    Accept-Language：可接受的自然语言

c、响应首部字段（响应报文会使用的首部字段）

    Accept-Ranges：可接受的字节范围
    Location：令客户端重新定向到的URI
    Server：HTTP服务器的安装信息

d、实体首部字段（请求报文与响应报文的的实体部分使用的首部字段）

    Allow：资源可支持的HTTP方法
    Content-Type：实体主类的类型 application/json
    Content-Encoding：实体主体适用的编码方式(压缩)
    Content-Language：实体主体的自然语言
    Content-Length：实体主体的的字节数
    Content-Range：实体主体的位置范围，一般用于发出部分请求时使用

6、请求方法：
    1	GET	    请求指定的页面信息，并返回实体主体。
    2	HEAD	类似于get请求，只不过返回的响应中没有具体的内容，用于获取报头
    3	POST	向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。
                数据被包含在请求体中。POST请求可能会导致新的资源的建立和/或已有资源的修改。
    4	PUT	    从客户端向服务器传送的数据取代指定的文档的内容。
        PUT请求：如果两个请求相同，后一个请求会把第一个请求覆盖掉。（所以PUT用来改资源）
        Post请求：后一个请求不会把第一个请求覆盖掉。（所以Post用来增资源）
        PATCH：是对PUT方法的补充，用来对已知资源进行局部更新，PATCH是幂等的。
    5	DELETE	请求服务器删除指定的页面。
    6	CONNECT	HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。
    7	OPTIONS 	允许客户端查看服务器的性能。
    8	TRACE	回显服务器收到的请求，主要用于测试或诊断。

7、http缓存：
    http缓存都是从第二次请求开始的。第一次请求资源时，服务器返回资源，并在respone header头中回传资源的缓存参数；
    第二次请求时，浏览器判断这些请求参数，命中强缓存就直接200，否则就把请求参数加到request header头中传给服务器，
    看是否命中协商缓存，命中则返回304，否则服务器会返回新的资源。
    
    对于强制缓存，服务器通知浏览器一个缓存时间，在缓存时间内，下次请求，直接用缓存，不在时间内，执行比较缓存策略。
    对于比较缓存(协商缓存)，将缓存信息中的Etag和Last-Modified通过请求发送给服务器，由服务器校验，返回304状态码时，浏览器直接使用缓存。

    Cache-Control参数：
        private:             客户端可以缓存(默认)
        public:              客户端和代理服务器都可缓存（前端的同学，可以认为public和private是一样的）
        max-age=xxx:         缓存的内容将在 xxx 秒后失效
        no-cache:            需要使用对比缓存来验证缓存数据
        no-store:            所有内容都不会缓存，强制缓存，对比缓存都不会触发

8、session和Cookie